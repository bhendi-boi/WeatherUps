import { useState, useEffect } from "react";
export const FAKERES = {
	latitude: 13.0,
	longitude: 80.125,
	generationtime_ms: 1.5439987182617188,
	utc_offset_seconds: 18000,
	timezone: "Asia/Kolkata",
	timezone_abbreviation: "IST",
	elevation: 20.0,
	current_weather: {
		temperature: 27.9,
		windspeed: 9.7,
		winddirection: 39.0,
		weathercode: 2,
		time: 1673326800,
	},
	hourly_units: {
		time: "unixtime",
		temperature_2m: "°C",
		apparent_temperature: "°C",
		weathercode: "wmo code",
	},
	hourly: {
		time: [
			1673290800, 1673294400, 1673298000, 1673301600, 1673305200, 1673308800,
			1673312400, 1673316000, 1673319600, 1673323200, 1673326800, 1673330400,
			1673334000, 1673337600, 1673341200, 1673344800, 1673348400, 1673352000,
			1673355600, 1673359200, 1673362800, 1673366400, 1673370000, 1673373600,
			1673377200, 1673380800, 1673384400, 1673388000, 1673391600, 1673395200,
			1673398800, 1673402400, 1673406000, 1673409600, 1673413200, 1673416800,
			1673420400, 1673424000, 1673427600, 1673431200, 1673434800, 1673438400,
			1673442000, 1673445600, 1673449200, 1673452800, 1673456400, 1673460000,
			1673463600, 1673467200, 1673470800, 1673474400, 1673478000, 1673481600,
			1673485200, 1673488800, 1673492400, 1673496000, 1673499600, 1673503200,
			1673506800, 1673510400, 1673514000, 1673517600, 1673521200, 1673524800,
			1673528400, 1673532000, 1673535600, 1673539200, 1673542800, 1673546400,
			1673550000, 1673553600, 1673557200, 1673560800, 1673564400, 1673568000,
			1673571600, 1673575200, 1673578800, 1673582400, 1673586000, 1673589600,
			1673593200, 1673596800, 1673600400, 1673604000, 1673607600, 1673611200,
			1673614800, 1673618400, 1673622000, 1673625600, 1673629200, 1673632800,
			1673636400, 1673640000, 1673643600, 1673647200, 1673650800, 1673654400,
			1673658000, 1673661600, 1673665200, 1673668800, 1673672400, 1673676000,
			1673679600, 1673683200, 1673686800, 1673690400, 1673694000, 1673697600,
			1673701200, 1673704800, 1673708400, 1673712000, 1673715600, 1673719200,
			1673722800, 1673726400, 1673730000, 1673733600, 1673737200, 1673740800,
			1673744400, 1673748000, 1673751600, 1673755200, 1673758800, 1673762400,
			1673766000, 1673769600, 1673773200, 1673776800, 1673780400, 1673784000,
			1673787600, 1673791200, 1673794800, 1673798400, 1673802000, 1673805600,
			1673809200, 1673812800, 1673816400, 1673820000, 1673823600, 1673827200,
			1673830800, 1673834400, 1673838000, 1673841600, 1673845200, 1673848800,
			1673852400, 1673856000, 1673859600, 1673863200, 1673866800, 1673870400,
			1673874000, 1673877600, 1673881200, 1673884800, 1673888400, 1673892000,
		],
		temperature_2m: [
			22.6, 22.1, 21.8, 21.6, 21.4, 21.7, 21.2, 21.6, 23.5, 25.9, 27.9, 28.8, 29.2,
			29.2, 29.0, 28.5, 27.4, 26.2, 25.0, 24.4, 23.9, 23.4, 22.9, 22.3, 21.8, 21.4,
			21.0, 20.6, 20.3, 20.2, 20.1, 20.5, 22.4, 24.7, 26.8, 28.1, 28.8, 29.1, 29.0,
			28.6, 27.7, 26.4, 25.2, 24.5, 23.8, 23.3, 22.8, 22.3, 21.8, 21.5, 21.1, 21.0,
			20.8, 20.6, 20.3, 20.6, 22.5, 24.8, 26.9, 28.1, 28.5, 28.9, 28.7, 28.2, 27.4,
			26.3, 25.2, 24.5, 23.9, 23.4, 23.1, 22.6, 22.1, 21.7, 21.3, 20.9, 20.5, 20.2,
			20.2, 20.9, 22.9, 25.3, 26.9, 28.2, 29.2, 29.8, 29.9, 29.2, 27.9, 26.3, 25.3,
			24.5, 23.6, 23.4, 23.4, 23.3, 23.0, 22.7, 22.3, 21.7, 21.1, 20.7, 21.0, 21.6,
			22.8, 24.2, 25.9, 27.7, 28.5, 29.0, 29.0, 28.4, 27.4, 26.0, 25.1, 24.1, 23.1,
			22.6, 22.3, 21.8, 21.2, 20.5, 19.6, 19.0, 18.3, 17.8, 17.8, 18.0, 19.3, 21.5,
			24.5, 27.9, 29.2, 30.0, 30.2, 29.5, 28.2, 26.4, 25.3, 24.2, 22.9, 22.2, 21.7,
			20.9, 20.3, 19.7, 19.0, 18.4, 17.9, 17.7, 18.1, 18.9, 20.7, 23.2, 26.3, 29.5,
			30.6, 31.0, 30.7, 29.9, 28.6, 26.8, 25.6, 24.5, 23.3, 22.8, 22.6, 22.0,
		],
		apparent_temperature: [
			24.9, 24.5, 24.2, 24.0, 23.8, 24.1, 23.6, 23.9, 25.8, 28.0, 28.8, 30.1, 31.1,
			31.0, 30.2, 29.1, 28.2, 26.9, 26.1, 26.1, 25.9, 25.7, 25.4, 25.0, 24.5, 24.1,
			23.7, 23.0, 22.7, 22.5, 22.3, 22.6, 24.4, 26.8, 29.3, 31.1, 31.8, 31.8, 31.2,
			29.8, 28.9, 27.7, 27.0, 26.8, 26.5, 26.2, 25.9, 25.4, 24.9, 24.5, 24.1, 24.0,
			23.8, 23.4, 23.1, 23.4, 25.2, 27.5, 29.5, 31.4, 31.7, 31.6, 30.9, 29.7, 28.9,
			27.9, 27.3, 27.3, 27.0, 26.8, 26.5, 26.0, 25.5, 24.9, 24.4, 23.9, 23.4, 23.1,
			23.0, 23.6, 25.6, 27.8, 30.0, 31.7, 32.6, 32.6, 31.8, 30.5, 29.0, 28.0, 27.5,
			27.1, 26.8, 26.7, 26.7, 26.6, 26.4, 26.2, 25.6, 25.1, 24.3, 23.8, 23.9, 24.4,
			25.5, 26.9, 28.7, 30.9, 31.8, 32.0, 31.5, 30.1, 28.7, 27.6, 27.1, 26.6, 26.2,
			25.7, 25.5, 24.8, 24.2, 23.4, 22.4, 21.6, 20.7, 20.1, 19.9, 20.1, 21.4, 23.9,
			26.9, 30.8, 32.0, 32.3, 31.6, 30.2, 28.5, 27.5, 27.2, 26.9, 26.5, 26.2, 25.5,
			24.4, 23.6, 22.9, 21.8, 21.0, 20.2, 20.0, 20.2, 20.8, 22.6, 25.2, 29.2, 32.7,
			33.5, 33.0, 31.7, 30.4, 28.9, 27.9, 27.6, 27.3, 26.8, 26.5, 26.3, 25.6,
		],
		weathercode: [
			1, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 2,
			1, 2, 2, 2, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 2, 2, 2,
			2, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2,
			2, 2, 1, 1, 2, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
			2, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 45, 45, 45, 45, 45,
			45, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 45, 45, 45, 45, 45, 45, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		],
	},
	daily_units: {
		time: "unixtime",
		weathercode: "wmo code",
		temperature_2m_max: "°C",
		temperature_2m_min: "°C",
		apparent_temperature_max: "°C",
	},
	daily: {
		time: [
			1673290800, 1673377200, 1673463600, 1673550000, 1673636400, 1673722800,
			1673809200,
		],
		weathercode: [2, 2, 2, 2, 2, 45, 45],
		temperature_2m_max: [29.2, 29.1, 28.9, 29.9, 29.0, 30.2, 31.0],
		temperature_2m_min: [21.2, 20.1, 20.3, 20.2, 20.7, 17.8, 17.7],
		apparent_temperature_max: [31.1, 31.8, 31.7, 32.6, 32.0, 32.3, 33.5],
	},
};
// a hook which works same as state but also stores the value in local storage
// props: key : key which you want to pass in setting local storage
//              use signIndata for storing data state which is in signIn page
//        initialValue : initial value which you want to set (same as useState)
const useLocalStorageState = (key: string, initialValue: any) => {
	const [value, setValue] = useState(() => {
		return getSavedValue(key, initialValue);
	});

	useEffect(() => {
		localStorage.setItem(key, JSON.stringify(value));
	}, [value]);

	return [value, setValue];
};

const getSavedValue = (key: string, initialValue: any) => {
	const savedValue = JSON.parse(
		localStorage.getItem(key) || JSON.stringify(FAKERES)
	);
	if (savedValue) return savedValue;
	if (initialValue instanceof Function) return initialValue();
	return initialValue;
};

export default useLocalStorageState;
